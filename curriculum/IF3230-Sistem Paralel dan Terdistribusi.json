{
  "id": "IF3230",
  "points": "3 SKS",
  "syllabus": {
    "id": {
      "name": "Sistem Paralel dan Terdistribusi",
      "description": "Konsep dasar pada sistem paralel dan terdistribusi, fokus pada isu implementasi dan performansi yang terkait, model dan interface dari sistem paralel dan terdistribusi, arsitektur mesin paralel, teknik optimasi program paralel,sinkronisasi, konsistensi dan koherensi, fault tolerant dan reliability",
      "syllabus": "Kuliah ini membahas: -  dasar-dasar paralelisasi, strategi paralelisasi,  Parallel/distributed programming models and interfaces  - shared memory vs. message passing vs. remote procedure call (RPC) vs. global address space languages: e.g., pthreads, MPI, MapReduce, OpenMP, HPF, UPC, language-level threads (e.g., Java) Parallel machine architectures  - shared and distributed memory machines, multicore and multithreaded chips, interconnection networks Parallel program optimization techniques  - synchronization granularity, dependences, scheduling, load balancing Synchronization  - hardware primitives, logical and physical clocks, mutual exclusion, distributed transactions, transactional memory Consistency and coherence  - data-centric versus client-centric consistency models, cache coherence protocols Fault tolerance and reliability  - fail-stop versus byzantine failure models, two- and three-phase commits, reliable group communication, checkpointing, message logging",
      "outcomes": "Memahami konsep dasar dalam sistem paralel dan terdistribusiMemahami beberapa model pemrograman paralel (pthreads, MPI, MapReduce, OpenMP)Mampu mengembangkan aplikasi paralel yang dapat diskalakanMampu mengembangkan aplikasi terdistribusi yang dapat diskalakanMampu menggambarkan arsitektur paralelMampu menggambarkan mekanisme sinkronisasiMampu menggambarkan protokol konsistensi dan koherensiMampu menggambarkan model kegagalan sistem terdistribusiMenganalisis properti fault tolerance dari sistem"
    },
    "en": {
      "name": "Parallel and Distributed Systems",
      "description": "introduce basic concepts in parallel and distributed systems, focus on the implementation and performance issues associated with them, parallel and distributed systems models and interfaces, parallel machines architectures, parallel program optimization techniques, synchronization, consistency and coherence, fault tolerant and reliability",
      "syllabus": "- Basics of parallelization and parallelization strategies Parallel/distributed programming models and interfaces  - shared memory vs. message passing vs.remote procedure call (RPC) vs. global address space languages: e.g., pthreads, MPI, MapReduce, OpenMP, HPF, UPC, language-level threads (e.g., Java) Parallel machine architectures  - shared and distributed memory machines, multicore and multithreaded chips, interconnection networks Parallel program optimization techniques  - synchronization granularity, dependences, scheduling, load balancing Synchronization  - hardware primitives, logical and physical clocks, mutual exclusion, distributed transactions, transactional memory Consistency and coherence  - data-centric versus client-centric consistency models, cache coherence protocols Fault tolerance and reliability  - fail-stop versus byzantine failure models, two- and three-phase commits, reliable group communication, checkpointing, message logging",
      "outcomes": "Understands the basic concepts in parallel and distributed systemsUnderstands several parallel programming models (pthreads, MPI, MapReduce, OpenMP)Able to develop scalable parallel applicationsAble to develop scalable distributed applicationsAble to describe parallel architectureAble to describe synchronization mechanismsAble to describe consistency and coherence protocolsAble to describe failure models of distributed systemsAnalyze fault tolerance properties of a system"
    }
  }
}
